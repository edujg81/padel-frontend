@use "@angular/material" as mat;

@include mat.elevation-classes();
@include mat.app-background();

/* Define paleta común */
$primary-color: mat.$green-palette;
$tertiary-color: mat.$orange-palette;

/* Definición de paletas de colores disponibles (lista "seleccionar tema")*/
$colores: (
  green: mat.$green-palette,
  chartreuse: mat.$chartreuse-palette,
  lightgreen: mat.$spring-green-palette,
  cyan: mat.$cyan-palette,
  blue: mat.$blue-palette,
  azure: mat.$azure-palette,
  yellow: mat.$yellow-palette,
  orange: mat.$orange-palette,
  pink: mat.$rose-palette,
  red: mat.$red-palette,
  magenta: mat.$magenta-palette,
  violet: mat.$violet-palette,
);

html {
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
      //typography: mat.define-typography-config(),
      typography:
        (
          plain-family: Roboto,
          brand-family: Open Sans,
          bold-weight: 900,
          medium-weight: 500,
        ),
      density: (
        scale: -1,
      ),
    )
  );
}

/* Globales */
body.dark-theme {
  color-scheme: dark;
}

body {
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background: var(--mat-sys-surface); /* Fondo claro en modo normal */
  color: var(--mat-sys-on-surface);
  margin: 0;
  padding: 0;
}

// Ajustes de tarjetas
mat-card {
  margin: 15px 5px 0px 0px;
  padding: 16px;
  border-radius: 12px;
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
}

mat-card-header {
  margin-bottom: 10px;
}

/* Botones */
button {
  border-radius: 8px;
  margin: 4px;
}

.mat-form-field {
  width: 100%;
}

/* Tabla */
.mat-table {
  margin-top: 20px;
}

.mat-header-row {
  background-color: var(--mat-sys-primary);
  color: var(--mat-sys-on-primary);
}

.mat-row:hover {
  background-color: var(--mat-sys-secondary-container);
}

mat-card-title {
  font-size: 24px;
  font-weight: bold;
}

// .mat-card-content {
//   font-size: 16px;
// }

mat-card-actions {
  margin: 10px 10px 0px 0px; /* Agrega un margen de 10px en la parte superior, derecha e inferior, y 0 en la parte izquierda */
  cursor: pointer;
}

/* Responsividad */
@media screen and (max-width: 768px) {
  .mat-card {
    padding: 15px;
  }
}

@include mat.card-overrides(
  (
    elevated-container-shape: 32px,
  )
);

.tab {
  margin-left: 30px;
}

button.primary {
  color: var(--mat-sys-primary) !important; /* Asegúrate de usar el color primario definido en tu tema */
}

button.tertiary {
  color: var(--mat-sys-tertiary) !important;
}

button.error {
  color: var(--mat-sys-error) !important;
}

@media (forced-colors: active) {
  // Estilos específicos para el modo de colores forzados
  body {
    background-color: Window; // Color de fondo en modo forzado //
    color: WindowText; // Color de texto en modo forzado //
  }
}

/* Definición de temas */
.magenta-theme {
  $primario: magenta;
  $terciario: green; //pink, violet, chartreuse
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.yellow-theme {
  $primario: yellow;
  $terciario: blue; //chartreuse, orange, violet
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.orange-theme {
  $primario: orange;
  $terciario: blue; //yellow, red, cyan
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.chartreuse-theme {
  $primario: chartreuse;
  $terciario: violet; //green, yellow, magenta
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.cyan-theme {
  $primario: cyan;
  $terciario: red; //blue, azure, yellow
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.azure-theme {
  $primario: azure;
  $terciario: pink; //cyan, blue, yellow
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.red-theme {
  $primario: red;
  $terciario: cyan; //orange, pink, blue
  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.green-theme {
  $primario: green;
  $terciario: magenta; //chartreuse, lightgreen, cyan

  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.blue-theme {
  $primario: blue;
  $terciario: orange; //cyan, azure, red

  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.violet-theme {
  $primario: violet;
  $terciario: yellow; // magenta, blue, chartreuse

  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.pink-theme {
  $primario: pink;
  $terciario: chartreuse; //magenta, violet, azure

  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}

.lightgreen-theme {
  $primario: lightgreen;
  $terciario: pink; //chartreuse, green, orange

  $primary-color: map-get($colores, $primario);
  $tertiary-color: map-get($colores, $terciario);
  @include mat.theme(
    (
      color: (
        primary: $primary-color,
        tertiary: $tertiary-color,
      ),
    )
  );
}
